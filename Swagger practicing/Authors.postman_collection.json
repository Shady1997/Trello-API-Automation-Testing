{
	"info": {
		"_postman_id": "cf313a7a-4106-4718-9af8-8996cf444ef4",
		"name": "Authors",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//check return status is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//check return status is OK\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/Authors",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Author",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeid(length) {\r",
							"    var result           = '';\r",
							"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
							"    var charactersLength = characters.length;\r",
							"    for ( var i = 0; i < length; i++ ) {\r",
							"      result += characters.charAt(Math.floor(Math.random() * \r",
							" charactersLength));\r",
							"   }\r",
							"   return result;\r",
							"}\r",
							"pm.collectionVariables.set(\"firstName\",makeid(5));\r",
							"pm.collectionVariables.set(\"lastName\",makeid(5));\r",
							"pm.collectionVariables.set(\"authorID\",Math.floor(Math.random() * 100));\r",
							"pm.collectionVariables.set(\"bookID\",Math.floor(Math.random() * 100));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//check return status is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//check return status is OK\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{authorID}},\r\n  \"idBook\": {{bookID}},\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/Authors",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author with Book ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//check return status is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//check return status is OK\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/Authors/authors/books/{{bookID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"authors",
						"books",
						"{{bookID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author with ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//check return status is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//check return status is OK\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/Authors/{{authorID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{authorID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Author with ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//check return status is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//check return status is OK\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"idBook\": 0,\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/Authors/80",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"80"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Author with ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//check return status is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//check return status is OK\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/Authors/{{authorID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"{{authorID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "d4b30861-fe3c-4a68-b724-c34a36993de6",
			"key": "authorID",
			"value": ""
		},
		{
			"id": "3ecefa38-de65-40c7-8c1e-5b7b9bfff5d7",
			"key": "bookID",
			"value": ""
		},
		{
			"id": "b780c9ef-2eee-459e-ac93-2f832d5b6bb6",
			"key": "firstName",
			"value": ""
		},
		{
			"id": "85aaed6d-32b1-4e48-bdca-069d47a4b32a",
			"key": "lastName",
			"value": ""
		}
	]
}